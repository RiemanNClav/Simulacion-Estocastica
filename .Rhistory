func_g <- function(x){
x*((1+x^2)^-2)
}
func_h <- function(y){
func_g(1/y-1)/(y^2)
}
muestra <- vector(mode = 'numeric', length = 10000)
for (i in 1:10000) {
u = runif(1)
muestra[i] = func_h(u)
}
aproximacion_integral = mean(muestra)
print(aproximacion_integral)
muestras = 10000
N = vector(mode = 'numeric', length = muestras)
for(i in 1:muestras){
acum = runif(1)
N[i] = 1
while(acum<=1){
acum = acum + runif(1)
N[i] = N[i]+1
}
}
sum(N)
mean(N)
e^{4}
func_g <- function(x){
exp(exp(x))
}
h <- function(y,a,b){
(b-a)*g(a+((b-a)*y))
}
muestra <- vector(mode = 'numeric', length = 10000)
for (i in 1:10000) {
u = runif(1)
muestra[i] = g(u)
}
g(9)
g <- function(x){
exp(exp(x))
}
muestra <- vector(mode = 'numeric', length = 10000)
for (i in 1:10000) {
u = runif(1)
muestra[i] = g(u)
}
aproximacion_integral = mean(muestra)
print(aproximacion_integral)
g <- function(x){
exp(exp(x))
}
h <- function(y,a,b){
(b-a)*g(a+((b-a)*y))
}
muestra <- vector(mode = 'numeric', length = 10000)
for (i in 1:10000) {
u = runif(1)
muestra[i] = h(u,0,1)
}
aproximacion_integral = mean(muestra)
print(aproximacion_integral)
g <- function(x){
(1-x^(2))^(3/2)
}
h <- function(y,a,b){
(b-a)*g(a+((b-a)*y))
}
muestra <- vector(mode = 'numeric', length = 10000)
for (i in 1:10000) {
u = runif(1)
muestra[i] = h(u,0,1)
}
#-----------------------------------------------------------------------------
#4.
g <- function(x){
(1-x^(2))^(3/2)
}
aproximacion_integral = mean(muestra)
print(aproximacion_integral)
g <- function(x){
exp(x+x^(2))
}
h <- function(y,a,b){
(b-a)*g(a+((b-a)*y))
}
muestra <- vector(mode = 'numeric', length = 10000)
for (i in 1:10000) {
u = runif(1)
muestra[i] = h(u,-2,2)
}
aproximacion_integral = mean(muestra)
print(aproximacion_integral)
func_g <- function(x){
exp(-x^(2))
}
func_h <- function(y){
func_g(1/y-1)/(y^2)
}
muestra <- vector(mode = 'numeric', length = 10000)
for (i in 1:10000) {
u = runif(1)
muestra[i] = func_h(u)
}
aproximacion_integral_1 = mean(muestra)
aproximacion_integral_1  = aproximacion_integral_1 * (-1)
aproximacion_integral_1
func_g <- function(x){
exp(-x^(2))
}
func_h <- function(y){
func_g(1/y-1)/(y^2)
}
muestra <- vector(mode = 'numeric', length = 10000)
for (i in 1:10000) {
u = runif(1)
muestra[i] = func_h(u)
}
aproximacion_integral_1 = mean(muestra)
aproximacion_integral_1
func_g <- function(x){
exp(-x^(2))
}
func_h <- function(y){
func_g(1/y-1)/(y^2)
}
muestra <- vector(mode = 'numeric', length = 10000)
for (i in 1:10000) {
u = runif(1)
muestra[i] = func_h(u)
}
aproximacion_integral_1 = mean(muestra)
aproximacion_integral_1 = aproximacion_integral_1 * (-1)
func_g <- function(x){
exp(-x^(2))
}
func_h <- function(y){
func_g(1/y-1)/(y^2)
}
muestra <- vector(mode = 'numeric', length = 10000)
for (i in 1:10000) {
u = runif(1)
muestra[i] = func_h(u)
}
aproximacion_integral_1 = mean(muestra)
func_g <- function(x){
exp(-x^(2))
}
func_h <- function(y){
func_g(1/y-1)/(y^2)
}
muestra <- vector(mode = 'numeric', length = 10000)
for (i in 1:10000) {
u = runif(1)
muestra[i] = func_h(u)
}
aproximacion= mean(muestra)
aprox1 = aproximacion * (-1)
aprox2 = aproximacion
print(aprox1 + aprox2)
